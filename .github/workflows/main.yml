on: [push]

name: Build resume

jobs:
  build-resume:
    runs-on: ubuntu-latest
    name: Build a jsonresume to HTML and PDF
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build resume
        uses: ./ # Uses an action in the root directory
        id: build_resume
        with:
          theme-package-url: 'https://github.com/trucngn/jsonresume-theme-helloquan/releases/download/v4.4.0/jsonresume-theme-helloquan-4.4.0.tgz'

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: resume-artifacts
          path: |
            resume.html
            resume.pdf

      - name: Create release
        if: ${{ contains(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release HTML
        if: ${{ contains(github.ref, 'refs/tags/') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resume.html
          asset_name: resume.html
          asset_content_type: text/html

      - name: Upload release PDF
        if: ${{ contains(github.ref, 'refs/tags/') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resume.pdf
          asset_name: resume.pdf
          asset_content_type: application/pdf

      - name: Prepare public directory
        if: ${{ contains(github.ref, 'refs/tags/') }}
        run: |
          mkdir public
          cp resume.pdf public/truc-nguyen-resume.pdf
          cp resume.html public/index.html
          sed -i "s/{{deployment_date}}/$(date -Iseconds)/g" public/index.html

      - name: Deploy to GitHub Pages
        if: ${{ contains(github.ref, 'refs/tags/') }}
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
